{"version":3,"sources":["components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/ProgressBar/ProgressBar.module.css","components/Navigation/Drawer/Drawer.module.css","components/FinishedQuiz/FinishedQuiz.module.css","containers/QuizList/QuizList.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Input/Input.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.tsx","components/UI/Backdrop/Backdrop.tsx","components/Navigation/Drawer/Drawer.tsx","hoc/Layout/Layout.tsx","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.tsx","components/ActiveQuiz/AnswersList/AnswersList.tsx","components/ActiveQuiz/ProgressBar/ProgressBar.js","components/ActiveQuiz/ActiveQuiz.tsx","components/UI/Button/Button.tsx","components/FinishedQuiz/FinishedQuiz.tsx","components/UI/Loader/Loader.tsx","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.tsx","components/UI/Input/Input.tsx","form/formFramework.jsx","config/config.js","store/actions/auth.js","containers/Auth/Auth.tsx","components/UI/Select/Select.tsx","containers/QuizCreator/QuizCreator.tsx","store/actions/create.js","containers/QuizList/QuizList.tsx","components/Logout/Logout.tsx","App.tsx","serviceWorker.ts","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.tsx"],"names":["module","exports","ActiveQuiz","Question","image_wrapper","question_text","dots_container","dot","current","past","Drawer","close","active","FinishedQuiz","success","error","QuizList","wrapper","card","container","MenuToggle","open","Quiz","quizWrapper","AnswerItem","Button","primary","Loader","lds-ripple","center","Auth","AuthForm","Layout","Backdrop","AnswersList","Input","invalid","QuizCreator","Select","_ref","isOpen","onToggle","cls","styles","push","apply","concat","react_default","a","createElement","className","join","onClick","clickHandler","_this","props","onClose","renderLinks","links","map","link","index","key","react_router_dom","to","exact","activeClassName","label","this","isAuthenticated","Fragment","UI_Backdrop_Backdrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","connect","auth","token","answer","onAnswerClick","answerState","id","text","answers","AnswersList_AnswerItem_AnswerItem","ProgressBar","quizLength","answerNumber","Array","fill","item","quiz","quizName","ActiveQuiz_ProgressBar_ProgressBar","src","imageSrc","alt","question","ActiveQuiz_AnswersList_AnswersList","disabled","type","results","onRetry","successCount","Object","keys","reduce","total","length","imgTitle","UI_Button_Button","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","quizSetState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","defineProperty","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","match","params","fetchQuizById","retryQuiz","isLoading","UI_Loader_Loader","isFinished","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizId","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response","wrap","_context2","prev","next","get","sent","data","t0","stop","_x2","arguments","isInvalid","valid","touched","shouldValidate","value","onChange","errorMessage","inputType","htmlFor","Math","random","createControl","config","validation","objectSpread","validate","undefined","isValid","required","trim","email","validateEmail","minLength","validateForm","formControls","isFormValid","_i","_Object$keys","test","String","toLowerCase","secretKey","authSuccess","logout","localStorage","removeItem","autoLogout","time","_Component","_getPrototypeOf2","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","password","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","inherits","createClass","_this2","UI_Input_Input","onSubmit","renderInputs","isLogin","_callee","authData","url","expirationDate","_context","returnSecureToken","post","Date","getTime","expiresIn","setItem","idToken","localId","_x","options","htmlForm","option","createOptionControl","numOption","createFormControls","option1","option2","option3","option4","onAddQuestionHandler","_this$state$formContr","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","renderSelect","UI_Select_Select","renderFormControls","react","controls","select","renderList","name","fetchQuizes","forEach","Logout","react_router","App","autoLogin","routes","path","component","hoc_Layout_Layout","React","withRouter","getItem","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initialState","loading","combineReducers","action","toConsumableArray","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a2d67ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1rIG8\",\"Question\":\"ActiveQuiz_Question__1cxAb\",\"image_wrapper\":\"ActiveQuiz_image_wrapper__3dCX4\",\"question_text\":\"ActiveQuiz_question_text__1bXMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dots_container\":\"ProgressBar_dots_container__3OgMt\",\"dot\":\"ProgressBar_dot__308mp\",\"current\":\"ProgressBar_current__2p6cz\",\"past\":\"ProgressBar_past__2sCF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__1MU8m\",\"close\":\"Drawer_close__14U0j\",\"active\":\"Drawer_active__wNVYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__iRaez\",\"success\":\"FinishedQuiz_success__4qU9j\",\"error\":\"FinishedQuiz_error__1Netx\",\"image_wrapper\":\"FinishedQuiz_image_wrapper__39clH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3686j\",\"wrapper\":\"QuizList_wrapper__w1cIl\",\"card\":\"QuizList_card__13SiN\",\"container\":\"QuizList_container__2B93U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2bFK7\",\"open\":\"MenuToggle_open__2VoRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__8or0w\",\"quizWrapper\":\"Quiz_quizWrapper__399pM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1XScQ\",\"success\":\"AnswerItem_success__ooi7-\",\"error\":\"AnswerItem_error__1hvkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3OvV0\",\"error\":\"Button_error__aQDYZ\",\"success\":\"Button_success__1c7Wq\",\"primary\":\"Button_primary__2wUBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3bTwl\",\"lds-ripple\":\"Loader_lds-ripple__15d5N\",\"center\":\"Loader_center__2ivmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3IreN\",\"AuthForm\":\"Auth_AuthForm__3aJSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__NeQJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__FaIJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__ki2HB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__n7nzs\",\"invalid\":\"Input_invalid__1dfUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2X8G2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__146y-\"};","import React from 'react';\r\nimport styles from './MenuToggle.module.css';\r\n\r\ninterface IProps {\r\n  isOpen: boolean;\r\n  onToggle: Function;\r\n}\r\n\r\nconst MenuToggle: React.FC<IProps> = ({ isOpen, onToggle }) => {\r\n  const cls = [styles.MenuToggle, 'fa'];\r\n\r\n  if (isOpen) {\r\n    cls.push(...['fa-times', `${styles.open}`]);\r\n  } else {\r\n    cls.push('fa-bars');\r\n  }\r\n\r\n  return <i className={cls.join(' ')} onClick={() => onToggle()} />;\r\n};\r\n\r\nexport default MenuToggle;\r\n","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\ninterface IProps {\r\n  onClick: Function;\r\n}\r\n\r\nconst Backdrop: React.FC<IProps> = ({ onClick }) => (\r\n  <div className={styles.Backdrop} onClick={() => onClick()} />\r\n);\r\n\r\nexport default Backdrop;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Drawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\ninterface IProps {\r\n  isOpen: boolean;\r\n  onClose: Function;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nclass Drawer extends Component<IProps, {}> {\r\n  clickHandler = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  renderLinks = links => {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={styles.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const cls = [styles.Drawer];\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(styles.close);\r\n    }\r\n\r\n    const links = [{ to: '/', label: 'Quiz List', exact: true }];\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({ to: '/quiz-creator', label: 'Quiz Creator', exact: false });\r\n      links.push({ to: '/logout', label: 'Logout', exact: false });\r\n    } else {\r\n      links.push({ to: '/auth', label: 'Auth', exact: false });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>{this.renderLinks(links)}</ul>\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React, { Component } from 'react';\r\nimport styles from './Layout.module.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nclass Layout extends Component<IProps> {\r\n  state = {\r\n    menu: false,\r\n  };\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({ menu: !this.state.menu });\r\n  };\r\n\r\n  menuCloseHandler = () => {\r\n    this.setState({ menu: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Layout}>\r\n        <header>\r\n          <div className=\"wrapper\">\r\n            <span>Playbazz</span>\r\n          </div>\r\n        </header>\r\n        <Drawer\r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n        <MenuToggle onToggle={this.toggleMenuHandler} isOpen={this.state.menu} />\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: !!state.auth.token,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react';\r\nimport styles from './AnswerItem.module.css';\r\n\r\ninterface IProps {\r\n  answer: { text: string; id: number };\r\n  onAnswerClick: Function;\r\n  answerState: number | null;\r\n}\r\n\r\nconst AnswerItem = ({ answer, onAnswerClick, answerState }: IProps) => {\r\n  const cls = [styles.AnswerItem];\r\n\r\n  if (answerState) {\r\n    cls.push(styles[answerState]);\r\n  }\r\n\r\n  return (\r\n    <li className={cls.join(' ')} onClick={() => onAnswerClick(answer.id)}>\r\n      {answer.text}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AnswerItem;\r\n","import React from 'react';\r\nimport styles from './AnswersList.module.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\ninterface IProps {\r\n  onAnswerClick: Function;\r\n  answers: { id: number; text: string }[];\r\n  answerState: any;\r\n}\r\n\r\nconst AnswersList = ({ answers, onAnswerClick, answerState }: IProps) => {\r\n  return (\r\n    <ul className={styles.AnswersList}>\r\n      {answers.map((answer: { id: number; text: string }) => {\r\n        return (\r\n          <AnswerItem\r\n            key={answer.id}\r\n            answer={answer}\r\n            onAnswerClick={() => onAnswerClick(answer.id)}\r\n            answerState={answerState ? answerState[answer.id] : null}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AnswersList;\r\n","import React from 'react';\r\nimport styles from './ProgressBar.module.css';\r\n\r\nconst ProgressBar = ({ quizLength, answerNumber }) => {\r\n  const dotsRender = () => {\r\n    return Array(quizLength)\r\n      .fill(1)\r\n      .map((item, index) => {\r\n        let cls = null;\r\n        if (index + 1 < answerNumber) cls = `${styles.past}`;\r\n        else if (index + 1 === answerNumber) cls = `${styles.current}`;\r\n\r\n        return <div className={`${styles.dot} ${cls}`} key={index} />;\r\n      });\r\n  };\r\n  return <div className={styles.dots_container}>{dotsRender()}</div>;\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport styles from './ActiveQuiz.module.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\nimport { IQuestion } from '../../models/IQuestion';\r\nimport ProgressBar from './ProgressBar/ProgressBar';\r\n\r\ninterface IProps {\r\n  quiz: IQuestion;\r\n  onAnswerClick: Function;\r\n  quizLength: number;\r\n  answerNumber: number;\r\n  answerState: any;\r\n  quizName?: string;\r\n}\r\n\r\nconst ActiveQuiz = ({\r\n  quiz,\r\n  quizLength,\r\n  onAnswerClick,\r\n  answerNumber,\r\n  answerState,\r\n  quizName,\r\n}: IProps) => {\r\n  return (\r\n    <div className={styles.ActiveQuiz}>\r\n      <h2>{quizName}</h2>\r\n      <div className={styles.Question}>\r\n        <ProgressBar quizLength={quizLength} answerNumber={answerNumber} />\r\n        <small>\r\n          {answerNumber} / {quizLength}\r\n        </small>\r\n      </div>\r\n      <div className={styles.image_wrapper}>\r\n        <img src={`/img/${quiz.imageSrc}`} alt=\"Avatar\" />\r\n        <span className={styles.question_text}>{quiz.question}</span>\r\n      </div>\r\n\r\n      <AnswersList answers={quiz.answers} onAnswerClick={onAnswerClick} answerState={answerState} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveQuiz;\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ninterface IProps {\r\n  onClick: any;\r\n  disabled: boolean;\r\n  type: string;\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({ children, onClick, disabled, type }) => {\r\n  const cls = [styles.Button, styles[type]];\r\n  return (\r\n    <button onClick={onClick} disabled={disabled} className={cls.join(' ')}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './FinishedQuiz.module.css';\r\n// import { IQuestion } from '../../models/IQuestion';\r\nimport Button from '../UI/Button/Button';\r\n\r\ninterface IProps {\r\n  results: any;\r\n  // quiz: Array<IQuestion>;\r\n  quiz: any;\r\n  onRetry: Function;\r\n}\r\n\r\nconst FinishedQuiz: React.FC<IProps> = ({ results, quiz, onRetry }) => {\r\n  const successCount = Object.keys(results).reduce((total, key) => {\r\n    if (results[key] === 'success') {\r\n      total++;\r\n    }\r\n    return total;\r\n  }, 0);\r\n\r\n  const renderResults = () => {\r\n    return quiz.map((quizItem, index) => {\r\n      const cls = [\r\n        'fa',\r\n        results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n        styles[results[quizItem.id]],\r\n      ];\r\n\r\n      return (\r\n        <li key={quizItem.id}>\r\n          <strong>{index + 1}.</strong> {quizItem.question}\r\n          <i className={cls.join(' ')} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.FinishedQuiz}>\r\n      <div className={styles.image_wrapper}>\r\n        <img src={`/img/${quiz[quiz.length - 1].imgTitle}`} alt=\"\" />\r\n      </div>\r\n      {/* <ul>{renderResults()}</ul> */}\r\n      <p>\r\n        {successCount} correct answers from {quiz.length - 1}\r\n      </p>\r\n      <div>\r\n        <Button onClick={() => onRetry()} disabled={false} type=\"primary\">\r\n          retry Again\r\n        </Button>\r\n        <Link to=\"/\">\r\n          <Button onClick={() => onRetry()} disabled={false} type=\"primary\">\r\n            To list of quizzes\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishedQuiz;\r\n","import React from 'react';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={styles.center}>\r\n      <div className={styles.Loader}>\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://playbuzz-f1185.firebaseio.com',\r\n});\r\n","export const FETCH_QUIZES_START = '[quiz] FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = '[quiz] FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = '[quiz] FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = '[quiz] FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = '[quiz] QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = '[quiz] FINISH_QUIZ';\r\n\r\nexport const QUIZ_NEXT_QUESTION = '[quiz] QUIZ_NEXT_QUESTION';\r\n\r\nexport const QUIZ_RETRY = '[quiz] QUIZ_RETRY';\r\n\r\nexport const CREATE_QUIZ_QUESTION = '[quiz] CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = '[quiz] RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = '[auth] AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = '[auth] AUTH_LOGOUT';\r\nexport const AUTH_LOGIN = '[auth] AUTH_LOGIN';\r\n","import axios from '../../axios/axios-quiz';\r\nimport {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY,\r\n  QUIZ_SET_STATE,\r\n} from './actionTypes';\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart());\r\n    try {\r\n      const response = await axios.get('/quizes.json');\r\n\r\n      const quizes = [];\r\n\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: response.data[key][response.data[key].length - 1].quizName,\r\n          imgTitle: response.data[key][response.data[key].length - 1].imgTitle,\r\n        });\r\n      });\r\n\r\n      dispatch(fetchQuizesSuccess(quizes));\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e));\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart());\r\n\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`);\r\n      const quiz = response.data;\r\n\r\n      dispatch(fetchQuizSuccess(quiz));\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e));\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz,\r\n  };\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START,\r\n  };\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes,\r\n  };\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e,\r\n  };\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState,\r\n    results,\r\n  };\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ,\r\n  };\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number,\r\n  };\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY,\r\n  };\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz;\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0];\r\n      if (state.answerState[key] === 'success') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = state.results;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success';\r\n      }\r\n\r\n      dispatch(quizSetState({ [answerId]: 'success' }, results));\r\n    } else {\r\n      results[question.id] = 'error';\r\n      dispatch(quizSetState({ [answerId]: 'error' }, results));\r\n    }\r\n\r\n    const timeout = window.setTimeout(() => {\r\n      if (isQuizFinished(state)) {\r\n        dispatch(finishQuiz());\r\n      } else {\r\n        dispatch(quizNextQuestion(state.activeQuestion + 1));\r\n      }\r\n      window.clearTimeout(timeout);\r\n    }, 1500);\r\n  };\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length - 1;\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from './Quiz.module.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\n// import { IQuestion } from '../../models/IQuestion';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz';\r\n\r\ninterface IProps {\r\n  activeQuestion: number;\r\n  answerState: any;\r\n  isFinished: boolean;\r\n  results: any;\r\n  // quiz: Array<IQuestion>;\r\n  quiz: any;\r\n  isLoading: boolean;\r\n  fetchQuizById: Function;\r\n  quizAnswerClick: Function;\r\n  retryQuiz: Function;\r\n  quizName: string;\r\n}\r\n\r\nclass Quiz extends Component<IProps & RouteComponentProps, {}> {\r\n  componentDidMount() {\r\n    const id = this.props.match.params as { id: string };\r\n    this.props.fetchQuizById(id.id);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.retryQuiz();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Quiz}>\r\n        <div className={styles.quizWrapper}>\r\n          {/* <h1>Answer to the questions</h1> */}\r\n\r\n          {this.props.isLoading || !this.props.quiz ? (\r\n            <Loader />\r\n          ) : this.props.isFinished ? (\r\n            <FinishedQuiz\r\n              results={this.props.results}\r\n              quiz={this.props.quiz}\r\n              onRetry={this.props.retryQuiz}\r\n            />\r\n          ) : (\r\n            <ActiveQuiz\r\n              quiz={this.props.quiz[this.props.activeQuestion]}\r\n              quizName={this.props.quiz[this.props.quiz.length - 1].quizName}\r\n              onAnswerClick={this.props.quizAnswerClick}\r\n              quizLength={this.props.quiz.length - 1}\r\n              answerNumber={this.props.activeQuestion + 1}\r\n              answerState={this.props.answerState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ quiz }) => {\r\n  return {\r\n    activeQuestion: quiz.activeQuestion,\r\n    answerState: quiz.answerState,\r\n    isFinished: quiz.isFinished,\r\n    results: quiz.results,\r\n    quiz: quiz.quiz,\r\n    isLoading: quiz.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Quiz);\r\n","import React, { FC } from 'react';\r\nimport styles from './Input.module.css';\r\n\r\ninterface IProps {\r\n  type?: string;\r\n  label: string;\r\n  value: string;\r\n  onChange: any;\r\n  errorMessage?: string;\r\n  valid: boolean;\r\n  touched: boolean;\r\n  shouldValidate: boolean;\r\n}\r\n\r\nconst isInvalid = (valid: boolean, touched: boolean, shouldValidate: boolean): boolean => {\r\n  return !valid && shouldValidate && touched;\r\n};\r\n\r\nconst Input: FC<IProps> = ({\r\n  type,\r\n  label,\r\n  value,\r\n  onChange,\r\n  errorMessage,\r\n  valid,\r\n  touched,\r\n  shouldValidate,\r\n}) => {\r\n  const inputType = type || 'text';\r\n  const cls = [styles.Input];\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  if (isInvalid(valid, touched, shouldValidate)) {\r\n    cls.push('invalid');\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{label}</label>\r\n      <input type={inputType} id={htmlFor} value={value} onChange={onChange} />\r\n      {isInvalid(valid, touched, shouldValidate) ? (\r\n        <span>{errorMessage || 'Please, insert correct value'}</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export const createControl = (config, validation) => {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: '',\r\n  };\r\n};\r\n\r\nexport const validate = (value, validation = null) => {\r\n  if (!validation) return true;\r\n\r\n  let isValid = true;\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid;\r\n  }\r\n\r\n  if (validation.email) {\r\n    isValid = validateEmail(value) && isValid;\r\n  }\r\n\r\n  if (validation.minLength) {\r\n    isValid = value.length >= validation.minLength && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n\r\nexport const validateForm = formControls => {\r\n  let isFormValid = true;\r\n\r\n  for (let name of Object.keys(formControls)) {\r\n    isFormValid = formControls[name].valid && isFormValid;\r\n  }\r\n\r\n  return isFormValid;\r\n};\r\n\r\nconst validateEmail = email => {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n","const config = {\r\n  secretKey: 'AIzaSyB1EgtAubI8bzqe1iaaP0u9eDa6634L1LY',\r\n};\r\n\r\nexport default config;\r\n","import axios from 'axios';\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes';\r\nimport config from '../../config/config';\r\n\r\nexport const auth = (email, password, isLogin) => {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=${\r\n      config.secretKey\r\n    }`;\r\n\r\n    if (isLogin) {\r\n      url = `https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=${\r\n        config.secretKey\r\n      }`;\r\n    }\r\n\r\n    const response = await axios.post(url, authData);\r\n    const data = response.data;\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n    localStorage.setItem('token', data.idToken);\r\n    localStorage.setItem('userId', data.localId);\r\n    localStorage.setItem('expirationDate', expirationDate);\r\n\r\n    dispatch(authSuccess(data.idToken));\r\n    dispatch(autoLogout(data.expiresIn));\r\n  };\r\n};\r\n\r\nexport const authSuccess = token => {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('userId');\r\n  localStorage.removeItem('expirationDate');\r\n\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const autoLogin = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(token));\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const autoLogout = time => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      logout();\r\n    }, time * 1000);\r\n  };\r\n};\r\n","import React, { Component, FormEvent } from 'react';\r\nimport styles from './Auth.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport { validate, validateForm } from '../../form/formFramework';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../store/actions/auth';\r\n\r\ninterface IEmail {\r\n  value: string;\r\n  type: string;\r\n  label: string;\r\n  errorMessage: string;\r\n  valid: boolean;\r\n  touched: boolean;\r\n  validation: {\r\n    required: boolean;\r\n    email: boolean;\r\n  };\r\n}\r\n\r\ninterface IPassword {\r\n  value: string;\r\n  type: string;\r\n  label: string;\r\n  errorMessage: string;\r\n  valid: boolean;\r\n  touched: boolean;\r\n  validation: {\r\n    required: boolean;\r\n    minLength: number;\r\n  };\r\n}\r\n\r\ninterface IState {\r\n  formControls: {\r\n    email: IEmail;\r\n    password: IPassword;\r\n  };\r\n  isFormValid: boolean;\r\n}\r\n\r\ninterface IProps {\r\n  auth: Function;\r\n}\r\n\r\nexport class Auth extends Component<IProps, IState> {\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Insert correct value',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true,\r\n        },\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        errorMessage: 'Insert correct value',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    );\r\n  };\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    );\r\n  };\r\n\r\n  submitHandler = (event: FormEvent): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, controlName: string): void => {\r\n    const formControls = { ...this.state.formControls };\r\n    let isFormValid: boolean = true;\r\n\r\n    const control = this.state.formControls[controlName];\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = validate(control.value, control.validation);\r\n    formControls[controlName] = control;\r\n\r\n    isFormValid = validateForm(formControls);\r\n    this.setState({ formControls, isFormValid });\r\n  };\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n            this.onChangeHandler(event, controlName)\r\n          }\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Auth}>\r\n        <div>\r\n          <h1>Authorization</h1>\r\n          <form onSubmit={this.submitHandler} className={styles.AuthForm}>\r\n            {this.renderInputs()}\r\n            <Button type=\"success\" onClick={this.loginHandler} disabled={!this.state.isFormValid}>\r\n              LogIn\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Registration\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Auth);\r\n","import React, { FC } from 'react';\r\nimport styles from './Select.module.css';\r\n\r\ninterface IProps {\r\n  label: string;\r\n  value: number;\r\n  onChange: any;\r\n  options: Array<{ text: string; value: number }>;\r\n}\r\n\r\nconst Select: FC<IProps> = ({ label, value, onChange, options }) => {\r\n  const htmlForm: string = `${label}-${Math.random()}`;\r\n\r\n  return (\r\n    <div className={styles.Select}>\r\n      <label htmlFor={htmlForm}>{label}</label>\r\n      <select id={htmlForm} value={value} onChange={onChange}>\r\n        {options.map((option, index: number) => {\r\n          return (\r\n            <option value={option.value} key={option.value + index}>\r\n              {option.text}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component, FormEvent, ChangeEvent, Fragment } from 'react';\r\nimport styles from './QuizCreator.module.css';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport { createControl, validate, validateForm } from '../../form/formFramework';\r\nimport { connect } from 'react-redux';\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create';\r\n\r\nconst createOptionControl = (numOption: number) => {\r\n  return createControl(\r\n    {\r\n      label: `Option ${numOption}`,\r\n      errorMessage: 'The value cannot be empty',\r\n      id: numOption,\r\n    },\r\n    { required: true }\r\n  );\r\n};\r\n\r\nconst createFormControls = () => {\r\n  return {\r\n    question: createControl(\r\n      {\r\n        label: 'Enter a question',\r\n        errorMessage: 'The question cannot be empty',\r\n      },\r\n      { required: true }\r\n    ),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4),\r\n  };\r\n};\r\n\r\ninterface IProps {\r\n  quiz: any;\r\n  createQuizQuestion: Function;\r\n  finishCreateQuiz: Function;\r\n}\r\n\r\nexport class QuizCreator extends Component<IProps, {}> {\r\n  state = {\r\n    formControls: createFormControls(),\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n  };\r\n\r\n  submitHandler = (event: FormEvent): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  onAddQuestionHandler = (event: MouseEvent): void => {\r\n    event.preventDefault();\r\n\r\n    // const quiz = [...this.state.quiz];\r\n    // const index = quiz.length + 1;\r\n    const { question, option1, option2, option3, option4 } = this.state.formControls;\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        { text: option1.value, id: option1.id },\r\n        { text: option2.value, id: option2.id },\r\n        { text: option3.value, id: option3.id },\r\n        { text: option4.value, id: option4.id },\r\n      ],\r\n    };\r\n\r\n    this.props.createQuizQuestion(questionItem);\r\n\r\n    this.setState({\r\n      formControls: createFormControls(),\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n    });\r\n  };\r\n\r\n  createQuizHandler = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      formControls: createFormControls(),\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n    });\r\n\r\n    this.props.finishCreateQuiz();\r\n  };\r\n\r\n  changeHandler = (value: string, controlName: string) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = this.state.formControls[controlName];\r\n    let isFormValid: boolean = true;\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n    isFormValid = validateForm(formControls);\r\n\r\n    this.setState({ formControls, isFormValid });\r\n  };\r\n\r\n  selectChangeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    this.setState({ rightAnswerId: +event.target.value });\r\n  };\r\n\r\n  renderSelect = () => {\r\n    return (\r\n      <Select\r\n        label=\"Select correct answer\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          { text: '1', value: 1 },\r\n          { text: '2', value: 2 },\r\n          { text: '3', value: 3 },\r\n          { text: '4', value: 4 },\r\n        ]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderFormControls = () => {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n\r\n      return (\r\n        <Fragment key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={(event: ChangeEvent<HTMLInputElement>): void =>\r\n              this.changeHandler(event.target.value, controlName)\r\n            }\r\n          />\r\n        </Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const controls = this.renderFormControls();\r\n    const select = this.renderSelect();\r\n    return (\r\n      <div className={styles.QuizCreator}>\r\n        <div>\r\n          <h1>Quiz Creator</h1>\r\n          <form onSubmit={this.submitHandler}>\r\n            {controls}\r\n            {select}\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.onAddQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Add Question\r\n            </Button>\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Create Quiz\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    quiz: state.create.quiz,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuizCreator);\r\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from './actionTypes';\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nexport const createQuizQuestion = item => {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item,\r\n  };\r\n};\r\n\r\nexport const resetQuizCreation = () => {\r\n  return {\r\n    type: RESET_QUIZ_CREATION,\r\n  };\r\n};\r\n\r\nexport const finishCreateQuiz = () => {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('/quizes.json', getState().create.quiz);\r\n    dispatch(resetQuizCreation());\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './QuizList.module.css';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizes } from '../../store/actions/quiz';\r\n\r\ninterface IProps {\r\n  quizes: Array<{ id: string; name: string; imgTitle: string }>;\r\n  isLoading: boolean;\r\n  fetchQuizes: Function;\r\n}\r\n\r\nexport class QuizList extends Component<IProps, {}> {\r\n  renderList = () => {\r\n    return this.props.quizes.map((quiz: { id: string; name: string; imgTitle: string }) => {\r\n      return (\r\n        <NavLink to={`/quiz/${quiz.id}`} key={quiz.id}>\r\n          <div className={styles.card}>\r\n            {/* <img src={`${process.env.PUBLIC_URL}/img/harry/h1.jpg alt=\"Avatar\"`} /> */}\r\n            <img src={`/img/${quiz.imgTitle}`} alt=\"Avatar\" />\r\n            <div className=\"container\">\r\n              <h4>\r\n                <b>{quiz.name}</b>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </NavLink>\r\n      );\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizes();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.QuizList}>\r\n        {this.props.isLoading && this.props.quizes.length !== 0 ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className={styles.wrapper}>{this.renderList()}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ quiz }) => {\r\n  return {\r\n    quizes: quiz.quizes,\r\n    isLoading: quiz.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuizList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../store/actions/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  logout: Function;\r\n}\r\n\r\nclass Logout extends Component<IProps, {}> {\r\n  componentDidMount() {\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Logout);\r\n","import React from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport Quiz from './containers/Quiz/Quiz';\r\nimport Auth from './containers/Auth/Auth';\r\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\r\nimport QuizList from './containers/QuizList/QuizList';\r\nimport { Route, Switch, Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport Logout from './components/Logout/Logout';\r\nimport { autoLogin } from './store/actions/auth';\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean;\r\n  autoLogin: Function;\r\n}\r\n\r\nclass App extends React.Component<IProps & RouteComponentProps> {\r\n  componentDidMount() {\r\n    this.props.autoLogin();\r\n  }\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/quiz/:id\" component={Quiz} />\r\n        <Route path=\"/\" exact component={QuizList} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\r\n          <Route path=\"/quiz/:id\" component={Quiz} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/\" exact component={QuizList} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return <Layout>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: !!state.auth.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    autoLogin: () => dispatch(autoLogin()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(App)\r\n);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY,\r\n  QUIZ_SET_STATE,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {},\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null,\r\n  quiz: null,\r\n};\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        quizes: action.quizes,\r\n      };\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        quiz: action.quiz,\r\n      };\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state,\r\n        answerState: action.answerState,\r\n        results: action.results,\r\n      };\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state,\r\n        isFinished: true,\r\n      };\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state,\r\n        answerState: null,\r\n        activeQuestion: action.number,\r\n      };\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  quiz: [],\r\n};\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item],\r\n      };\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state,\r\n        quiz: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  token: null,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport quizReducer from './quiz';\r\nimport createReducer from './create';\r\nimport authReducer from './auth';\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}